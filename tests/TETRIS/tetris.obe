
TYPE SCREENTYPE = ARRAY 40 OF ARRAY 23 OF INTEGER;
TYPE PIECETYPE = ARRAY 4 OF ARRAY 4 OF INTEGER;

TYPE GAMETYPE = RECORD
		SCREEN : SCREENTYPE;
		INPUT : INTEGER;
		TURN : INTEGER;
		POSSITIONX : INTEGER;
		POSSITIONY : INTEGER;
		PIECE : PIECETYPE;
		SCORE : INTEGER;
		END;

TYPE GAMEPOINTER = POINTER TO GAMETYPE;

PROCEDURE RANDOM(VAR SEED : INTEGER; CHANGE : INTEGER) : INTEGER;
BEGIN
	SEED := SEED *CHANGE MOD 2171;
	RETURN SEED;
END RANDOM;

PROCEDURE (G : GAMEPOINTER) REFRESH();
VAR I,J : INTEGER;
BEGIN
	I := 0;
	J := 0;
	WHILE (I < 23) DO
		WHILE( J < 40) DO
			IF (G.SCREEN[J][I] # 0)THEN
				WRITE G.SCREEN[J][I];
				WRITE G.SCREEN[J][I];
			ELSE
				WRITE "  ";
			END;
			J := J + 1;
		END;
		J := 0;
		I := I + 1;
	END;
END REFRESH;

PROCEDURE (G: GAMEPOINTER) DRAWBOARD();
VAR I : INTEGER;
BEGIN
	I := 0;
	WHILE (I < 23 ) DO
		G.SCREEN[14][I] := 1;
		G.SCREEN[25][I] := 1;
		I := I + 1;
	END;

	I := 0;
	WHILE (I < 10) DO
		G.SCREEN[15+I][22] := 1;
		I := I + 1;
	END;
END DRAWBOARD;

PROCEDURE (G : GAMEPOINTER) GETINPUT();
BEGIN
	WRITE "ENTER MOVE, <=4,<^7,^5,9^>,6=> 0 EXITS: ";
	READ G.INPUT;
	G.TURN := G.TURN + 1;
END GETINPUT;

PROCEDURE (G : GAMEPOINTER) RANDOMPIECE(VAR SEED : INTEGER);
VAR I,J,N : INTEGER;
BEGIN
	N := RANDOM(SEED,G.TURN) MOD 6 + 2;

	I := 0;
	J := 0;
	WHILE (I < 4) DO
		WHILE(J < 4) DO
			G.PIECE[I][J] := 0;
			J := J + 1;
		END;
		J := 0;
		I := I + 1;
	END;

	IF N = 7 THEN
		G.PIECE[1][1] := N;
		G.PIECE[1][2] := N;
		G.PIECE[2][2] := N;
		G.PIECE[2][1] := N;
	END;

	IF N = 2 THEN
		G.PIECE[2][0] := N;
		G.PIECE[2][1] := N;
		G.PIECE[2][2] := N;
		G.PIECE[2][3] := N;
	END;
	IF N = 3 THEN
		G.PIECE[2][0] := N;
		G.PIECE[2][1] := N;
		G.PIECE[2][2] := N;
		G.PIECE[1][2] := N;
	END;
	IF N = 4 THEN
		G.PIECE[1][0] := N;
		G.PIECE[1][1] := N;
		G.PIECE[1][2] := N;
		G.PIECE[2][2] := N;
	END;
	IF N = 5 THEN
		G.PIECE[1][0] := N;
		G.PIECE[1][1] := N;
		G.PIECE[2][1] := N;
		G.PIECE[2][2] := N;
	END;
	IF N = 6 THEN
		G.PIECE[2][0] := N;
		G.PIECE[2][1] := N;
		G.PIECE[1][1] := N;
		G.PIECE[1][2] := N;
	END;
END RANDOMPIECE;

PROCEDURE (G : GAMEPOINTER) ROTATELEFT();
VAR TEMP : PIECETYPE;
VAR I,J : INTEGER;
BEGIN
	I := 0;
	J := 0;
	WHILE (I < 4) DO
		WHILE (J < 4) DO
			TEMP[J][3-I] := G.PIECE[I][J];
			J := J + 1;
		END;
		J := 0;
		I := I + 1;
	END;

	I := 0;
	J := 0;
	WHILE (I < 4) DO
		WHILE (J < 4) DO
			G.PIECE[I][J] := TEMP[I][J];
			J := J + 1;
		END;
		J := 0;
		I := I + 1;
	END;
END ROTATELEFT;

PROCEDURE (G : GAMEPOINTER) ROTATERIGHT();
VAR TEMP : PIECETYPE;
VAR I,J : INTEGER;
BEGIN
	I := 0;
	J := 0;
	WHILE (I < 4) DO
		WHILE (J < 4) DO
			TEMP[3-J][I] := G.PIECE[I][J];
			J := J + 1;
		END;
		J := 0;
		I := I + 1;
	END;

	I := 0;
	J := 0;
	WHILE (I < 4) DO
		WHILE (J < 4) DO
			G.PIECE[I][J] := TEMP[I][J];
			J := J + 1;
		END;
		J := 0;
		I := I + 1;
	END;
END ROTATERIGHT;

PROCEDURE (G : GAMEPOINTER) WIPE();
VAR I, J : INTEGER;
BEGIN
	I := 0;
	J := 0;
	WHILE (I < 40) DO
		WHILE (J < 23) DO
			G.SCREEN[I][J] := 0;
			J := J + 1;
		END;
		I := I + 1;
		J := 0;
	END;
END WIPE;

PROCEDURE (G : GAMEPOINTER) MOVEDOWN(START : INTEGER);
VAR I, J : INTEGER;
BEGIN
	I := 0;
	J := START-1;
	WHILE (J >= 0) DO
		WHILE (I < 10) DO
			G.SCREEN[I+15][J+1] := G.SCREEN[I+15][J];
			I := I + 1;
		END;
		J := J - 1;
		I := 0;
	END;

	I := 0;
	WHILE ( I< 10) DO
		G.SCREEN[15+I][0] := 0;
		I := I + 1;
	END;
END MOVEDOWN;

PROCEDURE (G : GAMEPOINTER) CLEARPIECE();
VAR I,J : INTEGER;
BEGIN
	I := 0;
	J := 0;
	WHILE (I < 4) DO
		WHILE (J < 4) DO
			IF (G.PIECE[I][J] # 0) THEN
				G.SCREEN[I+G.POSSITIONX+15][J+G.POSSITIONY] := 0;
			END;
			J := J + 1;
		END;
		J := 0;
		I := I + 1;
	END;
END CLEARPIECE;

PROCEDURE (G : GAMEPOINTER) DRAWPIECE();
VAR I,J : INTEGER;
BEGIN
	I := 0;
	J := 0;
	WHILE (I < 4) DO
		WHILE (J < 4) DO
			IF (G.PIECE[I][J] # 0) THEN
				G.SCREEN[I+G.POSSITIONX+15][J+G.POSSITIONY] := G.PIECE[I][J];
			END;
			J := J + 1;
		END;
		J := 0;
		I := I + 1;
	END;
END DRAWPIECE;

PROCEDURE (G : GAMEPOINTER) FIT(X,Y : INTEGER) : BOOLEAN;
VAR I,J : INTEGER;
BEGIN
	I := 0;
	J := 0;
	WHILE (I < 4) DO
		WHILE ( J < 4) DO
			IF (G.PIECE[I][J] # 0) & (G.SCREEN[15+X+I][J+Y] # 0) THEN
				RETURN FALSE;
			END;
			J := J + 1;
		END;
		J := 0;
		I := I + 1;
	END;

	RETURN TRUE;
END FIT;

PROCEDURE (G : GAMEPOINTER) PLACEPIECE(VAR SEED : INTEGER) : BOOLEAN;
VAR MOVE,J,I : INTEGER;
BEGIN
	MOVE := G.INPUT;

	IF (MOVE = 0) THEN RETURN FALSE; END;

	G.CLEARPIECE;
	IF (MOVE = 6 ) THEN
		IF (G.FIT(G.POSSITIONX+1,G.POSSITIONY+1)) THEN
			G.POSSITIONX := G.POSSITIONX + 1;
		END;
	END;
	IF (MOVE = 4 ) THEN
		IF (G.FIT(G.POSSITIONX-1,G.POSSITIONY+1)) THEN
			G.POSSITIONX := G.POSSITIONX - 1;
		END;
	END;

	IF (MOVE = 7 ) THEN
		G.ROTATELEFT;
		IF (G.FIT(G.POSSITIONX,G.POSSITIONY+1) # TRUE) THEN
			G.ROTATERIGHT;
		END;
	END;

	IF (MOVE = 9 ) THEN
		G.ROTATERIGHT;
		IF (G.FIT(G.POSSITIONX,G.POSSITIONY+1) # TRUE) THEN
			G.ROTATELEFT;
		END;
	END;

	IF (G.FIT(G.POSSITIONX, G.POSSITIONY+1) # TRUE) THEN
		IF (G.POSSITIONY = 0) THEN RETURN FALSE; END;
		G.DRAWPIECE;
		G.RANDOMPIECE(SEED);
		G.POSSITIONX := 3;
		G.POSSITIONY := 0;
		I := 0;
		J := 0;
		WHILE ( I < 22) DO
			WHILE (J < 10) DO
				IF (G.SCREEN[J+15][I] = 0) THEN
					EXIT;
				END;
				IF (J = 9) THEN
					G.MOVEDOWN(I);
					G.SCORE := G.SCORE + 1;
				END;
				J := J + 1;
			END;
			J := 0;
			I := I + 1;
		END;
	ELSE
		G.POSSITIONY := G.POSSITIONY + 1;
		IF (G.FIT(G.POSSITIONX,G.POSSITIONY+1) # TRUE) THEN
			G.DRAWPIECE;
			G.RANDOMPIECE(SEED);
			G.POSSITIONX := 3;
			G.POSSITIONY := 0;
			I := 0;
			J := 0;
			WHILE ( I < 22) DO
				WHILE (J < 10) DO
					IF (G.SCREEN[J+15][I] = 0) THEN
						EXIT;
					END;
					IF (J = 9) THEN
						G.MOVEDOWN(I);
						G.SCORE := G.SCORE + 1;
					END;
					J := J + 1;
				END;
				J := 0;
				I := I + 1;
			END;
		ELSE
			G.DRAWPIECE;
		END;
	END;
	RETURN TRUE;
END PLACEPIECE;

PROGRAM main
VAR SEED : INTEGER;
VAR I : INTEGER;
VAR GAME : GAMEPOINTER;
BEGIN
	WRITE "ENTER A LARGE RANDOM NUMBER: ";
	READ SEED;

	NEW (GAME);

	GAME.WIPE;
	GAME.SCORE := 0;
	GAME.DRAWBOARD;
	GAME.TURN := 2;
	GAME.INPUT := 5;
	GAME.POSSITIONX := 3;
	GAME.POSSITIONY := 0;
	GAME.RANDOMPIECE(SEED);
	WHILE (GAME.PLACEPIECE(SEED)) DO
		GAME.REFRESH;
		GAME.GETINPUT;
	END;
	WRITE NL, "YOU CLEARED ",GAME.SCORE," LINES.", NL;
END.

